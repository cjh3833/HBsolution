ㄴ1. 탬플릿 이미지 받은뒤 히스토그램, inshow
2. 2개의 히스토그램 비교
3. 밝기 올리거나 내리기


histogram의 peak 출력
ex) 0~255 있으면 현재 pick : 128  이런식으로

조명이 0이면 peak도 0일테니
조명을 1씩 올리면서 최적의 peak 확인

04_16
- templ이 아닌 최적상태의 img_out을 histogram화 -> compare histogram
- light controller, gain, 노출값 적절히 설정
- 밝기 조절 후 gain,노출값 설정하는지 ? 아니면 밝기,gain,노출값 동시에 설정하는지

//결론 auto로 조정하지만 수동으로 조절할 수 있는지 확인해보기

04_17
- histogram with masked
- compare histogram은 그냥 바로 된거냐 or masked쓴 뒤의 모습인가, masked쓴 뒤 비교해야하는가 ?

1. src에서 얕은복사로 하나 꺼넨 뒤 masked
2. templ - masked된 이미지를 histogram화, 최적상태로 캡쳐로 한 뒤 templ사진 -> 영상에서 본 compare histogram
3. img_out - masked된 이미지를 hitogram화, peak 확인하고 비교

masked == GRAYSCALE ?
// 결론 - 마스킹하니까 극과 극 이분법이라 비교 불가



연구노트 7차

04_29 월요일
유사도는 float형태로,
cv2.HISTCMP_CORREL : 상관관계
1: 완전 일치, -1: 완전 불일치, 0: 무관계
이 방법으로 comparehist 출력하기

계산된 Histogram을 비교하는 것이 compareHist

compareHist 비교오류 -> 차원이 달라 일어나는 문제 같음

src (Height -> uint32_t     witgh -> uint32_t)    , 영상 uint8_t
convert 해준 뒤 비교해보기

c++ convert uint32_t to uint8_t

비교할 내용을 정규화해주고 비교해야하나 ?

04_30 화요일
compareHist(result, result, HISTCMP_CORREL)
compareHist(src_hist, src_hist, HISTCMP_CORREL)
2개는 인식하는데 나머지 인식x


gain, 노출도는 지정할 수 있는가 - 질문하기



05_02 목요일

compareHist 해결, 비교 잘 됨 0.9995
Gain - 최대한 낮게 -> pylon상에서 가장 낮은 Gain값 100 설정 완료
노출시간 : 최대 frame rate보다 낮게     최대 frame rate -> 1.0 ~ 1.1   -> 프레임 0.999967 설정완료




8차 연구노트

05_07 화요일
light controller 통신완료
유사율 일정 이하일 경우 밝기 +1 성공


피크값이 일정이상 커지면 밝기 -1하도록 설정하기

가끔 넘어가는 현상 수정하기 -완료-


05_09 목요일
compare histogram peak값, src의 histogram값 비교하고
일정 이하일 경우 light controller up
일정 이상일 경우 light controller down ?

남은 작업
-------------------------------
두 히스토그램의 peak값 출력
그 peak값 비교, bright 변수 조정

유사도부터인가 peak값부터인가 ?
peak값 비교 후 업다운?
유사도 일정이상시 업다운?
아니면 둘 다 동시 검사 ?





10차 연구노트

5_20
트라이 해보기
1. 빛 컨트롤하는것만 따로 뺴서 while문으로 만들기
2. 유사도가 일정이상 끝나면 light controller와 통신 종료


5_21
Histogram, 조명 조절 개발 완료

5_22
1. 헤더파일 만들기 ok완료
2. MFC 코드이식